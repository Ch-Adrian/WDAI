rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    	function isAuthenticated(){
      	return request.auth != null && request.auth.uid != null;
      }
      
      function isClient(){
      	return isAuthenticated() &&
        					exists(/databases/$(database)/documents/users/$(request.auth.uid));
      }
      
      function isManager(){
      	return isAuthenticated() && get( /databases/$(database)/documents/users/$(request.auth.uid)).data.isManager == true;
      }
      
      function isAdmin(){
      	return isAuthenticated() && get( /databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }
      
    	match /dishes/{dish}{
       allow read: if true;
       allow write: if isAdmin() || isManager();
      }
      
      match /users/{user}{
      	allow read: if true;
      	allow write: if true;
      }
      
      match /categories/{category}{
      	allow read: if true;
        allow write: if isAdmin() || isManager();
      }
      
      match /kitchens/{kitchen}{
        allow read: if true;
        allow write: if isAdmin() || isManager(); 
      }
      
      match /types/{type}{
      	allow read: if true;
        allow write: if isAdmin() || isManager();
      }
      
      match /persistence/{p}{
      	allow read: if true;
        allow write: if isAdmin();
      }

  }
}